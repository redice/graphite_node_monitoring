
user nginx;
worker_processes  2;

worker_cpu_affinity 01 10;
worker_priority -1;
worker_rlimit_nofile 655350;
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;
timer_resolution  100ms;

events {
    worker_connections  1024;
    use epoll;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    log_format  main  '$remote_addr - $remote_user [$time_local] $request '
                      '$status $body_bytes_sent $request_time $http_referer '
                      '$http_user_agent $http_x_forwarded_for $upstream_cache_status '
                      '$upstream_addr $upstream_response_time';

    access_log  /var/log/nginx/access.log  main;

    types_hash_max_size 20480;
   
    tcp_nodelay on;
    
    ### Proxy headers for internal communication
    proxy_http_version 1.1;
    proxy_connect_timeout 180s;
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    proxy_set_header   X-Scheme         $scheme;
    proxy_set_header   Connection       "";

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server_tokens off;

    upstream graphite_dashboard {
        #sticky;
        #ip_hash;
        server   127.0.0.1:8080 max_fails=10 fail_timeout=10s;
        keepalive 1024;
    }

    server {
        listen       80;
        #server_name  graphite.rickpc;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass   http://graphite_dashboard;
	    #root   html;
            #index  index.html index.htm;
        }

	    #Django media files
        location /media  {
            # your Django project's media files - amend as required
            alias  /usr/local/nginx/html/media;
        }

        #Django static files
        location /static {
            # your Django project's static files - amend as required
            alias  /usr/local/nginx/html/static;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
